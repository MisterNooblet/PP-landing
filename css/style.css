/* FONTS */


@import url('https://fonts.googleapis.com/css2?family=Chakra+Petch:wght@700&family=Gloria+Hallelujah&family=Koulen&display=swap');

/* GLOBAL STYLES */
:root {
    --font-primary: 'Gloria Hallelujah', cursive;
    --font-secondary: 'Chakra Petch', sans-serif;
    --font-code: 'Koulen', cursive;
    --bg-color: #000;
    --font-color: #ffffff;
    --btn-bg-color: #ffffff;
    --accent-color: #808080;
    --header-shadow: #808080 0px 0px 5px;
}
/*FLYING PIG*/
.flier {
    pointer-events: none;
}

    .flier > * {
        /* Adjust animation duration to change the element’s speed */
        animation: fly 50s linear infinite;
        pointer-events: none !important;
        top: 0;
        left: 0;
        transform: translateX(-120%) translateY(-120%) rotateZ(0);
        position: fixed;
        animation-delay: 1s;
        z-index: 999999;
    }

/* Keyframe values control where the element will begin
    and end its trajectory across the screen. Each rule
    represents a path the element follows across the screen. */

.flier {
    z-index: -1;
}
@keyframes fly {

    98.001%, 0% {
        display: block;
        transform: translateX(-200%) translateY(100vh) rotateZ(0deg)
    }

    15% {
        transform: translateX(100vw) translateY(-100%) rotateZ(180deg)
    }

    15.001%, 18% {
        transform: translateX(100vw) translateY(-30%) rotateZ(0deg)
    }

    40% {
        transform: translateX(-200%) translateY(3vh) rotateZ(-180deg)
    }

    40.001%, 43% {
        transform: translateX(-200%) translateY(-100%) rotateZ(-180deg)
    }

    65% {
        transform: translateX(100vw) translateY(50vh) rotateZ(0deg)
    }

    65.001%, 68% {
        transform: translateX(20vw) translateY(-200%) rotateZ(180deg)
    }

    95% {
        transform: translateX(10vw) translateY(100vh) rotateZ(0deg)
    }
}
/*BACKGROUND*/
@keyframes move-twink-back {
    from {
        background-position: 0 0;
    }

    to {
        background-position: -10000px 5000px;
    }
}

@keyframes move-clouds-back {
    from {
        background-position: 0 0;
    }

    to {
        background-position: 10000px 0;
    }
}

.stars, .twinkling, .clouds {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    display: block;
}

.stars {
    background: #000 url(stars.png) repeat top center;
    z-index: -3;
}

.twinkling {
    background: transparent url(twinkling.png) repeat top center;
    z-index: -2;
    animation: move-twink-back 200s linear infinite;
}


* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
  background-color: var(--bg-color);
  display: flex;
  flex-flow: column;
  height: 100vh;
  color: var(--font-color);
  font-family: var(--font-primary);
}

.container {
  display: flex;
  flex-direction: column;
  max-width: 960px;
  margin: 0 auto;
  padding: 1rem 2rem;
}

/* HEADER */

header {
  box-shadow: var(--header-shadow);
}

header .container {
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.menu {
  display: flex;
  gap: 2rem;
  align-items: center;
}

/* BUTTONS */

.btn {
  display: inline-block;
  padding: 1rem 2rem;
  background: var(--btn-bg-color);
  color: var(--accent-color);
  font-family: var(--font-secondary);
  font-style: italic;
  font-weight: bold;
  font-size: 1rem;
  text-transform: capitalize;
  transition: all 0.3s ease;
  box-shadow: 4px 4px 0 0 var(--accent-color);
  cursor: pointer;
  position: relative;
  text-decoration: none;
  outline: none;
}

/*NEW BUTTTONS*/

.spot {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}
/*
    This is the outer svg wrapper that the SVG itself will 
    fill. Multiple svg-wrapper classes can be put side by side.
*/

.svg-wrapper {
    margin-top: 0;
    position: relative;
    width: 150px;
    /*make sure to use same height/width as in the html*/
    height: 40px;
    display: inline-block;
    border-radius: 3px;
    margin-left: 5px;
    margin-right: 5px
}
/*
  This is where we define the fill, color, thickness,
  and stroke pattern of the SVG when there is no hover.
  The dasharray and offset together define the line position
  under the words. Here's also where the transition speed is set.
*/

#shape {
    stroke-width: 6px;
    fill: transparent;
    stroke: #009FFD;
    stroke-dasharray: 85 400;
    stroke-dashoffset: -220;
    transition: 1s all ease;
}
/* 
    Pushing the text up into the SVG. Without this the
    text would be below the div's.
*/

#text {
    margin-top: -50px;
    text-align: center;
}

    #text a {
        color: white;
        text-decoration: none;
        font-weight: 100;
        font-size: 1.1em;
    }
/* 
    Changing the shape on hover. I change the color of the stroke,
make it thinner, then set it to again wrap around the entire parent element.
*/

.svg-wrapper:hover #shape {
    stroke-dasharray: 50 0;
    stroke-width: 3px;
    stroke-dashoffset: 0;
    stroke: #06D6A0;
}

/*NEW BUTTONS END*/
.btn:hover {
  box-shadow: none;
}

.wallet-btn {
  border-radius: 5rem;
  margin-left: 2rem;
  border-color: transparent;
}

.hero-btn {
  border-radius: 4px;
  font-size: 1.2rem;
  padding: 1.5rem 3rem;
}

/* COUNTDOWN SECTION */

section {
  flex: 1 1 auto;
}


.countdown {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
}

.countdown ul {
  display: flex;
  gap: 2rem
}
.countdown .clock-item {
  list-style: none;
  width: 70px;
  height: auto;
}
.countdown .clock-item .count-number {
  background: var(--accent-color);
  color: var(--font-color);
  font-size: 2rem;
  font-weight: 700;
  font-family: var(--font-secondary);
  padding: 1rem;
  display: inline-block;
  width: 100%;
  text-align: center;
  line-height: 1;
  border-radius: 4px 4px 0 0;
}
.countdown .clock-item .count-text {
  background: var(--btn-bg-color);
  font-family: var(--font-secondary);
  font-size: 1.1rem;
  color: var(--bg-color);
  padding: 0.5rem 0.7rem;
  display: inline-block;
  width: 100%;
  text-align: center;
  line-height: 1;
  border-radius: 0 0 4px 4px;
}

.countdown h1 {
  text-shadow: 2px 2px 0 var(--accent-color);
  font-style: italic;
  margin: 2rem 0;
  font-size: 3.5rem;
  text-align: center;
}

.countdown p {
  font-size: 1.1rem;
  font-family: var(--font-secondary);
  margin-bottom: 2rem;
  text-align: center;
}

/* OWNER STYLES */

.owner-status {
  font-size: 2rem;
  text-align: center;
}

/* MEDIA QUERIES */

@media screen and (max-width: 768px) {
  .menu {
    gap: 1rem;
  }
  .wallet-btn {
    margin-left: 0;
    padding: 1rem;
    max-width: 8rem;
  }
  .countdown h1 {
    font-size: 2rem;
  }
  .countdown p {
    font-size: 1rem;
  }
}